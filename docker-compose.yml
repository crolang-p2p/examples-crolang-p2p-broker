services:

  redis-service:
    image: redis:alpine
    container_name: redis-broker
    volumes:
      - ./redis-volume:/data

  webhook-extensions-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: extension_server_example
    environment:
      - PORT=8083
    restart: always

  broker-service-1:
    image: alessandrotalmi/broker-service
    container_name: broker-1
    depends_on:
      - redis-service
      - webhook-extensions-server
    environment:
      - PORT=8081
      - LOG_LEVEL=2
      - REDIS_URL=redis://redis-service:6379
      - RTC_CONFIGURATION_RESOLVER_WEBHOOK_URL=http://webhook-extensions-server:8083/resolve-rtc-configuration
      - NODES_AUTHENTICATION_WEBHOOK_URL=http://webhook-extensions-server:8083/authenticate-node
      - AUTHORIZE_NODES_COMMUNICATION_WEBHOOK_URL=http://webhook-extensions-server:8083/authorize-nodes-communication
      - NODES_VALIDITY_CHECK_WEBHOOK_URL=http://webhook-extensions-server:8083/validity-check

  broker-service-2:
    image: alessandrotalmi/broker-service
    container_name: broker-2
    depends_on:
      - redis-service
      - webhook-extensions-server
    environment:
      - PORT=8082
      - LOG_LEVEL=2
      - REDIS_URL=redis://redis-service:6379
      - RTC_CONFIGURATION_RESOLVER_WEBHOOK_URL=http://webhook-extensions-server:8083/resolve-rtc-configuration
      - NODES_AUTHENTICATION_WEBHOOK_URL=http://webhook-extensions-server:8083/authenticate-node
      - AUTHORIZE_NODES_COMMUNICATION_WEBHOOK_URL=http://webhook-extensions-server:8083/authorize-nodes-communication
      - NODES_VALIDITY_CHECK_WEBHOOK_URL=http://webhook-extensions-server:8083/validity-check

  haproxy-service:
    image: haproxy
    container_name: haproxy-broker
    ports:
      - "8080:8080"
    volumes:
      - ./haproxy:/usr/local/etc/haproxy
    depends_on:
      - broker-service-1
      - broker-service-2
